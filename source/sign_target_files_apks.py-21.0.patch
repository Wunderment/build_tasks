diff --git a/tools/releasetools/sign_target_files_apks.py b/tools/releasetools/sign_target_files_apks.py
index c3205955fd..dcf94fcd4c 100755
--- a/tools/releasetools/sign_target_files_apks.py
+++ b/tools/releasetools/sign_target_files_apks.py
@@ -137,6 +137,12 @@ Usage:  sign_target_files_apks [flags] input_target_files output_target_files
   --android_jar_path <path>
       Path to the android.jar to repack the apex file.
 
+  --prebuilts_path <path to prebuild image files>
+      Specify a path that contains one or more image files, to be added to the
+      signed_target-files.zip.  Note, this directory must contain *only* .img
+      files that you want to add. All other files in the directory will be
+      added as well.
+
   --allow_gsi_debug_sepolicy
       Allow the existence of the file 'userdebug_plat_sepolicy.cil' under
       (/system/system_ext|/system_ext)/etc/selinux.
@@ -197,6 +203,7 @@ OPTIONS.gki_signing_key = None
 OPTIONS.gki_signing_algorithm = None
 OPTIONS.gki_signing_extra_args = None
 OPTIONS.android_jar_path = None
+OPTIONS.prebuilts_path = ""
 OPTIONS.vendor_partitions = set()
 OPTIONS.vendor_otatools = None
 OPTIONS.allow_gsi_debug_sepolicy = False
@@ -1440,6 +1447,8 @@ def main(argv):
       OPTIONS.vendor_partitions = set(a.split(","))
     elif o == "--allow_gsi_debug_sepolicy":
       OPTIONS.allow_gsi_debug_sepolicy = True
+    elif o == "--prebuilts_path":
+      OPTIONS.prebuilts_path = a
     elif o == "--override_apk_keys":
       OPTIONS.override_apk_keys = a
     elif o == "--override_apex_keys":
@@ -1503,6 +1512,7 @@ def main(argv):
           "vendor_partitions=",
           "vendor_otatools=",
           "allow_gsi_debug_sepolicy",
+          "prebuilts_path=",
           "override_apk_keys=",
           "override_apex_keys=",
       ],
@@ -1547,6 +1557,12 @@ def main(argv):
                      platform_api_level, codename_to_api_level_map,
                      compressed_extension)
 
+  if OPTIONS.prebuilts_path:
+    prebuilt_list = os.listdir(OPTIONS.prebuilts_path)
+
+    for prebuilt_image in prebuilt_list:
+      common.ZipWrite(output_zip, os.path.join(OPTIONS.prebuilts_path, prebuilt_image), os.path.join("IMAGES/", prebuilt_image))
+
   common.ZipClose(input_zip)
   common.ZipClose(output_zip)
 
@@ -1559,6 +1575,10 @@ def main(argv):
   # recovery patch is guaranteed to be regenerated there.
   if OPTIONS.rebuild_recovery:
     new_args.append("--rebuild_recovery")
+
+  if OPTIONS.prebuilts_path:
+    new_args.append("--add_missing")
+
   new_args.append(args[1])
   add_img_to_target_files.main(new_args)
 
